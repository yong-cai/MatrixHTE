% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bounds_functions_public.R
\name{dpo_bounds_svt_bin}
\alias{dpo_bounds_svt_bin}
\title{Matrix Frechet-Hoeffding Bounds for Distribution of Binary Potential Outcomes}
\usage{
dpo_bounds_svt_bin(
  Treat.Mat,
  Control.Mat,
  y1,
  y0,
  smooth = TRUE,
  bandwidth = 0.01,
  hc = FALSE,
  p1 = NULL,
  p0 = NULL,
  keep.diag = FALSE
)
}
\arguments{
\item{Treat.Mat}{Matrix of outcomes for treated units}

\item{Control.Mat}{Matrix of outcomes for control units}

\item{y1}{y1 in P(Y0 = y0, Y1 = y1). Should be 0 or 1.}

\item{y0}{y0 in P(Y0 = y0, Y1 = y1). Should be 0 or 1.}

\item{smooth}{Logical indicating whether or not to smooth.}

\item{bandwidth}{Bandwidth to be used for smoothing. Default is eta = 0.01 as recommended in Chatterjee (2015).}

\item{hc}{Logical indicating whether or not to correct for row and column heterogeneity. See Section 5.2 of Auerbach and Cai (2023).}
}
\value{
A list of bounds and the components.\tabular{ll}{
\code{bounds} \tab Lower and upper bounds for the DPO. \cr
\tab \cr
\code{breakdown} \tab Breakdown of the bounds into the vectorized Frechet-Hoeffding (vf) and eigenvalue-based (evb) components. Trivial bounds for probability are 0 and 1. \cr
}
}
\description{
This function computes bounds for P(Y0 = y0, Y1 = y1).
Outcomes are additionally smoothed by singular vector thresholding as in Chatterjee (2015).
Input matrices should contain only 0 or 1. This is a wrapper for \code{dpo_bounds_svt()}.
}
\examples{
# Generate data
Treat.Mat <- matrix(runif(200) > 0.8, 10, 20)*1
Control.Mat <- matrix(runif(100) > 0.8, 10, 10)*1

# P(Treat.Mat == 1, Control.Mat == 1)
dpo_bounds_svt_bin(Treat.Mat, Control.Mat, 1, 1)$bounds 
dpo_bounds_svt(-Treat.Mat, -Control.Mat, -0.5, -0.5)$bounds # equivalent implementation
}
